{"version":3,"sources":["components/CCItem.jsx","components/CCItemsInCart.jsx","components/CCItems.jsx","components/CCShop.jsx","item.js","App.js","serviceWorker.js","index.js"],"names":["CCItem","props","add","addToCart","item","remove","removeFromCart","this","available","Card","className","Img","variant","src","imgUrl","Body","Title","name","Text","price","Button","onClick","Component","CCItemsInCart","totalPrice","itemsInCart","map","CCItems","availableItemsList","CCShop","newAvailableItemsList","state","cart","push","filter","i","id","NewTotalPrice","setState","itemsList","tmpItem","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.be6536ef.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Card, Button } from 'react-bootstrap';\r\n\r\nimport '../css/CCItem.css';\r\n\r\n\r\nexport default class CCItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    add = () => {\r\n        this.props.addToCart(this.props.item);\r\n    }\r\n    remove = () => {\r\n        this.props.removeFromCart(this.props.item);\r\n    }\r\n\r\n    render() {\r\n        if (this.props.available) {\r\n            return (\r\n\r\n                <div>\r\n                    <Card className='availableCard'>\r\n                        <Card.Img variant=\"top\" className='availableImg' src={this.props.item.imgUrl} />\r\n                        <Card.Body>\r\n                            <Card.Title>{this.props.item.name}</Card.Title>\r\n                            <Card.Text>price: {this.props.item.price} &#x20AC;</Card.Text>\r\n                            <Button variant=\"primary\" onClick={this.add}>Add</Button>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div>\r\n                    <div>\r\n                        <Card className='cartCard'>\r\n                            <Card.Img variant=\"top\" className='cartImg' src={this.props.item.imgUrl} />\r\n                            <Button onClick={this.remove}>X</Button>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n}","import React, { Component } from 'react';\r\nimport { returnStatement } from '@babel/types';\r\nimport CCItem from './CCItem';\r\n\r\nexport default class CCItemsInCart extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br />\r\n                <h5>items in cart:</h5>\r\n                <h6>Total price: {this.props.totalPrice} &#x20AC;</h6>\r\n                {\r\n                    this.props.itemsInCart.map((item) => <CCItem item={item} removeFromCart={this.props.removeFromCart} available={false} />)\r\n                }\r\n\r\n                \r\n\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n}","import React , {Component} from 'react';\r\nimport CCItem from './CCItem';\r\n\r\nexport default class CCItems extends Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <br />\r\n                <h5>Choose your items</h5>\r\n                {\r\n                    this.props.availableItemsList.map((item)=><CCItem item={item} addToCart={this.props.addToCart} available={true} />)\r\n                }\r\n\r\n                \r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React, { Component } from 'react';\r\nimport '../css/CCShop.css';\r\n\r\nimport CCItemsInCart from './CCItemsInCart';\r\nimport CCItems from './CCItems';\r\n\r\nexport default class CCShop extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            availableItemsList: this.props.itemsList,\r\n            itemsInCart: this.props.itemsInCart,\r\n            totalPrice: 0\r\n        }\r\n    }\r\n\r\n    addToCart = (item) => {\r\n\r\n        let newAvailableItemsList = this.state.availableItemsList;\r\n        let cart = this.state.itemsInCart;\r\n        cart.push(item);\r\n        newAvailableItemsList = newAvailableItemsList.filter((i) => i.id !== item.id);\r\n        let NewTotalPrice = this.state.totalPrice + item.price;\r\n        this.setState({\r\n            availableItemsList: newAvailableItemsList,\r\n            itemsInCart: cart,\r\n            totalPrice: NewTotalPrice\r\n        })\r\n\r\n    }\r\n\r\n    removeFromCart = (item) => {\r\n        let newAvailableItemsList = this.state.availableItemsList;\r\n        let cart = this.state.itemsInCart;\r\n        newAvailableItemsList.push(item);\r\n        cart = cart.filter((i) => i.id !== item.id);\r\n        let NewTotalPrice = this.state.totalPrice - item.price;\r\n\r\n        this.setState({\r\n            availableItemsList: newAvailableItemsList,\r\n            itemsInCart: cart,\r\n            totalPrice: NewTotalPrice\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div id=\"CCShop-header\" className=\"col-12\">\r\n                        <img id=\"logo\" src=\"/images/Hayun'sLogo.jpg\" />\r\n                        <h3>Welcome to Hayun's shop</h3><hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div id=\"cart\" className=\"col-sm-6 col-md-4 col-lg-2\">\r\n\r\n                        <CCItemsInCart itemsInCart={this.state.itemsInCart} removeFromCart={this.removeFromCart} totalPrice={this.state.totalPrice} />\r\n\r\n                    </div>\r\n                    <div id=\"shop\" className=\"col-sm-6 col-md-8 col-lg-10\" >\r\n                        <CCItems availableItemsList={this.state.availableItemsList} addToCart={this.addToCart} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div id=\"footer\" className=\"col-12\"><hr/><h6>All rights reserved to Hayun's Group</h6></div>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n\r\n\r\n    }\r\n}","export class item{\r\n    constructor(id,name,price,imgUrl)\r\n    {\r\n        this.id=id;\r\n        this.name=name;\r\n        this.price= price;\r\n        this.imgUrl=imgUrl;\r\n    }\r\n\r\n\r\n    show(){\r\n        let tmpItem=\"\";\r\n        tmpItem+=`<p>ID: ${this.id}</p><p>Name: ${this.name}</p><p>Price: ${this.price}</p>\r\n        <img src=\"${this.imgUrl}\" />`;\r\n        return tmpItem;\r\n    }\r\n}\r\n\r\nconst hat = new item(1,\"Hurley hat\",100,\"./images/HurleyHat.png\");\r\nconst shoes = new item(2,\"Nike air force1\",350,\"./images/nikeShose.png\");\r\nconst shirt = new item(3,\"Nike shirt\",130,\"./images/NikeShirt.jpg\");\r\nconst pants = new item(4,\"Nike pants\",150,\"./images/NikePants.png\");\r\n\r\n export const itemsList = [hat,shoes,shirt,pants];","import React from 'react';\nimport './App.css';\nimport CCShop from './components/CCShop';\nimport {item , itemsList} from './item.js';\n\nvar itemsInCart =[];\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CCShop itemsList={itemsList} itemsInCart={itemsInCart}/>\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}